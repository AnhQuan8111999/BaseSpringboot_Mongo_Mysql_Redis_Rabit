1. Giới thiệu Redis
   - Redis ( Remote Dictionary Server ) : là 1 kho lưu giữ cấu 
     trúc giữ liệu trong bộ nhớ .
   
   -Thường được dùng như : 
     1 cơ sở dữ liệu phân tán , lưu cơ sở dữ liệu dưới dạng key-value
     tổ chức thành bộ nhớ đệm 
     Message broker
     
   -Viết bằng ngôn ngữ C
   
   - tương thích tốt với hệ điều hành Linux, OSX.
   
   -Redis có thể được xem là một cơ sở dữ liệu phi quan hệ 
   - Redis lưu trữ trên bộ nhớ chính thay vì lưu trữ trên đĩa cứng
   
   -Dữ liệu được lưu duwosi dạng Key-value 
     key sẽ được ánh xạ đến kiểu dữ liệu tương ứng .
   
   - Một số cấu trúc dữ liệu của Redis :
     STRINGS :là chuỗi byte liên tiếp nhau không bị giới hạn. 
       là cấu trúc cơ bản lưu trữ chuỗi , số , hình ảnh .
     
     LISTS : Danh sách các STRINGS
     
     HASHES : bảng lưu trữ các cặp key-value 
     
     ngoài những kiểu dữ liệu trên thì redis còn hỗ tr các kiểu 
     dữ  liệu : SETS, SORTED SETS, BITMAPS, GEOSPATIAL 
     INDEXES, STREAMS 
     
     -Ưu điểm : Hỗ trợ đa dạng cấu trúc dữ liệu 
                Tốc độ xử lý cao vì dữ liệu được lưu trong bộ 
                 nhớ chính
                Mã nguồn mở 
                Đa dụng 
                ĐẢm bảo DATA PERSISTENCE 
                
     -Hạn chế : Chi phí mở rộng cao , không hỗ trợ giao diện người dùng
     
     - Ứng dụng của Redis trong Caching 
       *Caching là quá trình lưu dữ liệu trong bộ nhớ đệm tăng 
       hiệu quả  sử dụng dữ liệu 
       => redis là sự lựa chọn tốt cho việc hiện thực bộ nhớ 
       
       *Sử dụng để hiện thực Bộ nhớ đệm trong các trang web,
        Bộ nhớ kết quả truy vấn CSDL , Bộ nhớ đệm cho các đối
        tượng thường dùng như ảnh , tệp , siêu dư liệu.
        
        * Lưu trữ phiên làm việc của người dùng => giảm rủi 
        ro mất mát dữ liệu 
        
        * Có thể sử dụng SORTED SETS để xếp hạng điểm  theo 
        thời gian 
        
        * ứng dụng nhắn tín : set lưu trữ các cuộc trò chuyện 
        list lưu trữ cuộc trò chuyện nhiều nhất ,Hash lưu trữ 
        thông tin và trạng thái người dùng 
        
        *Ứng dụng sử dụng vị trí 
        
        *Hàng đợi 
        
 

2.Sử dụng Redis
  -Cài đặt 
  truy cập : https://galaxyz.net/cach-cai-dat-va-bao-mat-redis-tren-ubuntu-2004.80.anews 
  
  
  - mở terminal : run lệnh sudo systemctl restart redis.service
                           redis-cli
                           auth 123456aA@
                           
                           
  - kệnh SET : SET key value  ví dụ : SET name John 
  
  - lệnh GET : GET key John    ví dụ : GET name 
  
  - EXISTS  : kiểu tra dữ liệu đã có trong redit hay chưa 
    nếu có rồi thì out: (integer) 1  còn chưa thì là 0
  
  - DEL : xóa 1 hoặc nhiều bản ghi - output : thông báo số 
    bản ghi đã xóa được. 
    
   - EXPIRE  set thời gian tồn tại cho 1 bản ghi 
     EXPIRE key time    ví dụ : EXPIRE name 10 
     TTL key kiểm tra thời gian sống của bản ghi : TTL n
       
       
   - STRLEN : độ dài của bản ghi 
   
   - APPEND : nối chuỗi  Ví dụ : APPEND name " Cena "
   
   -SETRANGE : ghi đè bản ghi và trả về đọ dài chuỗi 
      Ví dụ : SETRANGE name 6 Redis
       
   - INCR : tăng giá trị của 1 số lên 1 đơn vị
   - DECR  : giảm giá trị của 1 số đi 1 đơn vị
   - INCRBY key int : tăng giá trị key lên int
   - DECRBY key int : giảm giá trị key đi int
   
   
3. List trong Redis

   - RPUSH mylist A : thêm phần tử A vào mylist
   - LPUSH mylist B : Thêm phần tử B vào mylist  
   - LRANGE mylist 0 -1 : xem danh sách mylist từ ví trí 0 
     đến cuối ( -1 là phần tử sau phần từ  cuối)   
       
   - LPOP mylíst : xóa phần từ đầu tiên bên trái 
   - RPOP mylist  : xóa phần tử cuối cùng bên phải 
   - LLEN : độ dài của list
   - LINDEX : lấy giá trị phần tử có trước index
   - LSET gán giá trị của 1 phần tử vào index cho trước 
   - DEL mylist : xóa cả list
    
    
    
4.HASH 
  - HSET đặt giá trị của 1 trường vào 1 Hash
    HSET user username John
    
  - HMSET đặt nhiều giá trị của nhiều trường vào 1 cái hash
    HMSET user birthday 1999 sex male

  - HGET lấy giá trị 1 trường
    HGET user username
  
  - HMGET lấy giá trị của nhiều trường
    HMGET user birthday sex

  - HINCRBY user birthday 10 : tăng năm sinh lên 10 
  - 
    
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
        
